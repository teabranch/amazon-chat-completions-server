name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read
  id-token: write  # Mandatory for trusted publishing

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for setuptools-scm

      - name: Set up Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Set up uv env
        run: |
          uv venv

      - name: Install build dependencies with uv
        run: |
          uv pip install build hatchling
          uv pip install -e ".[dev]"

      - name: Install build module
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Verify version consistency
        run: |
          # Get version from hatch (should match the git tag)
          PYTHON_VERSION=$(uv run python -c "import open_bedrock_server; print(open_bedrock_server.__version__)")
          # Get the release tag from GitHub
          GITHUB_TAG=${GITHUB_REF#refs/tags/}
          echo "Python package version: $PYTHON_VERSION"
          echo "GitHub release tag: $GITHUB_TAG"
          # Ensure they match (allowing for 'v' prefix in tag)
          if [[ "$GITHUB_TAG" == "v$PYTHON_VERSION" ]] || [[ "$GITHUB_TAG" == "$PYTHON_VERSION" ]]; then
            echo "✅ Version consistency verified: $PYTHON_VERSION"
          else
            echo "❌ Version mismatch! Python: $PYTHON_VERSION, Tag: $GITHUB_TAG"
            exit 1
          fi

      - name: Build release distributions
        run: python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write

    environment:
      name: 'pypi'
      url: https://pypi.org/project/open-bedrock-server

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ## Changes
            
            Please see the [changelog](CHANGELOG.md) for details.
            
            ## PyPI Package
            
            ```bash
            pip install open-bedrock-server==${{ github.ref_name }}
            ```
            
            ## Installation
            
            Visit the [PyPI package page](https://pypi.org/project/open-bedrock-server) for installation instructions.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}