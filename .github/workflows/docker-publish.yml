name: Build and Publish Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for hatch-vcs

      - name: Set up Python (for hatch version)
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install hatch
        run: |
          pip install uv
          uv tool install hatch

      - name: Get version from hatch
        id: version
        run: |
          VERSION=$(hatch version)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"

      - name: Verify version for release
        run: |
          # Verify hatch version matches release tag
          HATCH_VERSION="${{ steps.version.outputs.version }}"
          GITHUB_TAG=${GITHUB_REF#refs/tags/}
          echo "Hatch version: $HATCH_VERSION"
          echo "GitHub release tag: $GITHUB_TAG"
          if [[ "$GITHUB_TAG" == "v$HATCH_VERSION" ]] || [[ "$GITHUB_TAG" == "$HATCH_VERSION" ]]; then
            echo "✅ Version consistency verified: $HATCH_VERSION"
          else
            echo "❌ Version mismatch! Hatch: $HATCH_VERSION, Tag: $GITHUB_TAG"
            exit 1
          fi
        if: github.event_name == 'release'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # For pull requests, use PR number
            type=ref,event=pr
            # For branch pushes (non-main), use branch name
            type=ref,event=branch,enable=${{ github.ref != format('refs/heads/{0}', 'main') }}
            # For main branch, use 'latest' and commit SHA
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=sha,format=short,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            # For releases, use semantic versioning (this ensures version consistency with hatch)
            type=semver,pattern={{version}},enable=${{ github.event_name == 'release' }}
            type=semver,pattern={{major}}.{{minor}},enable=${{ github.event_name == 'release' }}
            type=semver,pattern={{major}},enable=${{ github.event_name == 'release' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ steps.version.outputs.version }}